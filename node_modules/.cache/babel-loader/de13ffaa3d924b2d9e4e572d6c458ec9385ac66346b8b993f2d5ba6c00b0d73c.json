{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmeer\\\\Downloads\\\\ai\\\\eashaop\\\\src\\\\Components\\\\Chatbot\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./\"; // Add this line\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: userInput\n    }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n      const data = await response.json();\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: data.response\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.sender === \"user\" ? \"You: \" : \"Bot: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask me about health...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"1zGRC38DTEORNFfajD4oL7sdkj8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","sendMessage","trim","newMessages","sender","text","response","fetch","method","headers","body","JSON","stringify","message","data","json","error","console","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gmeer/Downloads/ai/eashaop/src/Components/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./\";  // Add this line\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    const newMessages = [...messages, { sender: \"user\", text: userInput }];\r\n    setMessages(newMessages);\r\n    setUserInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/chatbot\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: userInput }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setMessages([...newMessages, { sender: \"bot\", text: data.response }]);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-body\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.sender}`}>\r\n            <strong>{msg.sender === \"user\" ? \"You: \" : \"Bot: \"}</strong>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask me about health...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === \"Enter\" && sendMessage()}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}